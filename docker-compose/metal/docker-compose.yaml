version: '3.8'

services:
  kepler: &kepler
    image: quay.io/sustainable_computing_io/kepler:latest
    ports: 
      - "9100:9100"
    privileged: true
    pid: host
    volumes:
      - type: bind
        source: /proc
        target: /proc
      - type: bind
        source: /sys
        target: /sys
      - type: bind
        source: ./kepler/etc/kepler
        target: /etc/kepler
      # TODO: fix this so that kepler binary can be just mounted
      # - type: bind
      #   source: ../_output/bin/kepler
      #   target: /usr/bin/kepler-foo

    command:
      - -address
      -  "0.0.0.0:9100"
      - -v
      - "5"
      - -enable-cgroup-id=true
      - -enable-gpu=false
    networks:
      - kepler-network
    cap_add:
      - ALL

  ### 📦 kepler with any modifications
  # kepler-mods:
  #   <<: *kepler
  #   # WARN: replace this with your kepler image
  #   image: quay.io/sthaha/kepler:latest-dcgm
  #   ports: 
  #     - "9200:9100"


  ### 📦 scaphandre
  scaphandre:
    image: hubblo/scaphandre
    privileged: true
    ports: 
      - "8880:8080"
    volumes:
      - type: bind
        source: /proc
        target: /proc
      - type: bind
        source: /sys/class/powercap
        target: /sys/class/powercap
    command: ["prometheus"]
    networks:
      - kepler-network

  ### 📦 prometheus
  prometheus:
    build:
      context: ./prom
    ports:
      - "9090:9090"
    volumes: 
      - promdata-kepler:/prometheus 
      - type: bind
        source: ./prom/prometheus.yml
        target: /etc/prometheus/prometheus.yml

      # - type: bind
      #   source: ./prom/rules
      #   target: /etc/prometheus/rules
    networks:
      - kepler-network
      - virt-net

  grafana:
    build:
      context: ./grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/sample/kepler-dashboard.json"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    networks:
      - kepler-network
    volumes:
      - type: bind
        source: "./grafana/dashboards/kepler-dashboard.json"
        target: "/var/lib/grafana/dashboards/sample/kepler-dashboard.json"

      - type: bind
        source: "./grafana/dashboards/scaphandre-dashboard.json"
        target: "/var/lib/grafana/dashboards/sample/scaphandre-dashboard.json"

volumes:
  promdata-kepler:

networks:
  #  NOTE: External network created using the following command
  #  to allow access to VM from prometheus container
  #
  # use:
  # ❯ ip addr show virbr0
  #
  #  │ 17: virbr0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default qlen 1000
  #  │  link/ether 58:52:00:a6:77:2f brd ff:ff:ff:ff:ff:ff
  #  │  inet 192.168.124.1/24 brd 192.168.124.255 scope global virbr0
  #  │  valid_lft forever preferred_lft forever
  #
  # look for `inet` in the output and use that for the subnet in the next command
  #
  #
  #  docker network create \
  #    --driver=macvlan \
  #    --subnet=192.168.124.0/24 \
  #    -o parent=virbr0 virt-net
  #
  virt-net:
    name: virt-net
    external: true

  kepler-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.39.0/24
